[{"C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\redux\\redux-store.tsx":"1","C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\redux\\DialogsPageReducer.tsx":"2","C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\component\\Nav\\Nav.tsx":"3","C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\component\\Users\\UsersContainer.tsx":"4","C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\component\\Profile\\Profile.tsx":"5","C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\component\\Dialogs\\ItemsForDialog\\ItemsForDialog.tsx":"6","C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\component\\Profile\\MyPost\\MyPost.tsx":"7","C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\component\\Profile\\NewPost\\NewPost.tsx":"8","C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\App.tsx":"9","C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\component\\Friends\\Friends.tsx":"10","C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\component\\Header\\HeaderContainer.tsx":"11","C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\component\\Header\\Header.tsx":"12","C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\component\\Dialogs\\Dialog\\Dialog.tsx":"13","C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\component\\Profile\\NewPost\\NewPostContainer.tsx":"14","C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\component\\Dialogs\\DialogsContainer.tsx":"15","C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\component\\Users\\UsersClearComponent.tsx":"16","C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\api\\axios-get.ts":"17","C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\component\\Profile\\ProfileContainer.tsx":"18","C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\redux\\UsersReducer.tsx":"19","C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\redux\\AuthReducer.tsx":"20","C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\index.tsx":"21","C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\redux\\ProfilePageReducer.tsx":"22","C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\component\\Login\\Login.tsx":"23","C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\Hoc\\withAuthRedirect.tsx":"24","C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\component\\Profile\\Status\\Statuse.tsx":"25","C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\component\\Profile\\Ava\\Ava.tsx":"26","C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\component\\Dialogs\\Dialogs.tsx":"27","C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\component\\Profile\\Status\\statusWithHook.tsx":"28","C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\component\\Login\\formForLogin.tsx":"29","C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\component\\Profile\\NewPost\\FormForNewPost.tsx":"30","C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\component\\Dialogs\\ItemsForDialog\\FormForNewMessage.tsx":"31","C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\utilites\\helper.tsx":"32","C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\common\\TexareaForForm.tsx":"33","C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\redux\\AppReducer.tsx":"34"},{"size":780,"mtime":1616233933842,"results":"35","hashOfConfig":"36"},{"size":1119,"mtime":1615559367536,"results":"37","hashOfConfig":"36"},{"size":759,"mtime":1614947890968,"results":"38","hashOfConfig":"36"},{"size":3159,"mtime":1615266304323,"results":"39","hashOfConfig":"36"},{"size":1373,"mtime":1615395531963,"results":"40","hashOfConfig":"36"},{"size":231,"mtime":1614568680463,"results":"41","hashOfConfig":"36"},{"size":124,"mtime":1614568680479,"results":"42","hashOfConfig":"36"},{"size":485,"mtime":1615564692247,"results":"43","hashOfConfig":"36"},{"size":1823,"mtime":1616397950225,"results":"44","hashOfConfig":"36"},{"size":144,"mtime":1614568680463,"results":"45","hashOfConfig":"36"},{"size":1038,"mtime":1616394839491,"results":"46","hashOfConfig":"36"},{"size":713,"mtime":1616247761401,"results":"47","hashOfConfig":"36"},{"size":319,"mtime":1614568680447,"results":"48","hashOfConfig":"36"},{"size":686,"mtime":1614568680479,"results":"49","hashOfConfig":"36"},{"size":793,"mtime":1615559456288,"results":"50","hashOfConfig":"36"},{"size":2727,"mtime":1616399064714,"results":"51","hashOfConfig":"36"},{"size":1748,"mtime":1616229978543,"results":"52","hashOfConfig":"36"},{"size":2456,"mtime":1615309864507,"results":"53","hashOfConfig":"36"},{"size":4320,"mtime":1615298505019,"results":"54","hashOfConfig":"36"},{"size":2814,"mtime":1616396706984,"results":"55","hashOfConfig":"36"},{"size":402,"mtime":1614568680494,"results":"56","hashOfConfig":"36"},{"size":3116,"mtime":1615527960008,"results":"57","hashOfConfig":"36"},{"size":798,"mtime":1616247439087,"results":"58","hashOfConfig":"36"},{"size":708,"mtime":1615054102067,"results":"59","hashOfConfig":"36"},{"size":1407,"mtime":1615349085984,"results":"60","hashOfConfig":"36"},{"size":389,"mtime":1614568680479,"results":"61","hashOfConfig":"36"},{"size":1339,"mtime":1615564160246,"results":"62","hashOfConfig":"36"},{"size":904,"mtime":1615395348973,"results":"63","hashOfConfig":"36"},{"size":1333,"mtime":1616264295451,"results":"64","hashOfConfig":"36"},{"size":1037,"mtime":1615804159933,"results":"65","hashOfConfig":"36"},{"size":1198,"mtime":1615804159843,"results":"66","hashOfConfig":"36"},{"size":596,"mtime":1615796247206,"results":"67","hashOfConfig":"36"},{"size":1327,"mtime":1615804513420,"results":"68","hashOfConfig":"36"},{"size":998,"mtime":1616399142408,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1gf3old",{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"76"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"76"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"76"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"86"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\redux\\redux-store.tsx",[],"C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\redux\\DialogsPageReducer.tsx",["144"],"C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\component\\Nav\\Nav.tsx",[],["145","146"],"C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\component\\Users\\UsersContainer.tsx",["147"],"import React from \"react\";\r\nimport { compose } from \"redux\"\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    follow, FollowThunk,\r\n    getUsers,\r\n    setCurrentPage,\r\n    toogleFollowingInProgress,\r\n    unFollow, unFollowThunk,\r\n    UsersType\r\n} from \"../../redux/UsersReducer\";\r\nimport {UsersClearComponent} from \"./UsersClearComponent\";\r\nimport preloader from \"../../accets/preloader.gif\"\r\nimport {RootState} from \"../../redux/redux-store\";\r\nimport {WithAuthRedirect} from \"../../Hoc/withAuthRedirect\";\r\n\r\ntype PropsType = {\r\n    isFetching: boolean\r\n    users: Array<UsersType>\r\n    setCurrentPage: (currentPage: number) => void\r\n    follow: (id: number) => void\r\n    unFollow: (id: number) => void\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    toogleFollowingInProgress: (isFollowingInProgress: any, userId: any) => void\r\n    followingInProgress: any\r\n    getUsers: (currentPage: number, pageSize: number) => void\r\n    unFollowThunk: (Users: any, UserID: any) => void\r\n    FollowThunk: (Users: any, UserID: any) => void\r\n\r\n}\r\n\r\nclass UsersAPIComponent extends React.Component<PropsType> {\r\n\r\n    componentDidMount(): void {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize)\r\n    }\r\n\r\n    onClickHandler = (pageNumber: number) => {\r\n        this.props.getUsers(pageNumber, this.props.pageSize)\r\n    }\r\n\r\n    render(): React.ReactNode {\r\n        return (\r\n            <>\r\n                {this.props.isFetching ? <img src={preloader}/> : null}\r\n                <UsersClearComponent\r\n                    pageSize={this.props.pageSize}\r\n                    totalUsersCount={this.props.totalUsersCount}\r\n                    currentPage={this.props.currentPage}\r\n                    onClickHandler={this.onClickHandler}\r\n                    users={this.props.users}\r\n                    follow={this.props.follow}\r\n                    Unfollow={this.props.unFollow}\r\n                    toogleFollowingInProgress={this.props.toogleFollowingInProgress}\r\n                    followingInProgress={this.props.followingInProgress}\r\n                    unFollowThunk={this.props.unFollowThunk}\r\n                    FollowThunk={this.props.FollowThunk}\r\n                />\r\n\r\n\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: RootState) => {\r\n    return {\r\n        users: state.usersReduser.users,\r\n        pageSize: state.usersReduser.pageSize,\r\n        totalUsersCount: state.usersReduser.totalUsersCount,\r\n        currentPage: state.usersReduser.currentPage,\r\n        isFetching: state.usersReduser.isFetching,\r\n        followingInProgress: state.usersReduser.followingInProgress,\r\n    }\r\n}\r\n\r\nexport default compose<React.ComponentType>(WithAuthRedirect,connect(mapStateToProps, {\r\n    follow,\r\n    unFollow,\r\n    setCurrentPage,\r\n    toogleFollowingInProgress,\r\n    getUsers,\r\n    unFollowThunk,\r\n    FollowThunk\r\n}))(UsersAPIComponent)\r\n/*\r\nexport const UsersContainer = WithAuthRedirect(  connect(mapStateToProps, {\r\n    follow,\r\n    unFollow,\r\n    setCurrentPage,\r\n    toogleFollowingInProgress,\r\n    getUsers,\r\n    unFollowThunk,\r\n    FollowThunk\r\n})(UsersAPIComponent))*/\r\n","C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\component\\Profile\\Profile.tsx",["148","149"],"C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\component\\Dialogs\\ItemsForDialog\\ItemsForDialog.tsx",[],"C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\component\\Profile\\MyPost\\MyPost.tsx",[],["150","151"],"C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\component\\Profile\\NewPost\\NewPost.tsx",[],"C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\App.tsx",["152","153"],"C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\component\\Friends\\Friends.tsx",[],"C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\component\\Header\\HeaderContainer.tsx",["154","155","156","157","158","159"],"C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\component\\Header\\Header.tsx",["160"],"C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\component\\Dialogs\\Dialog\\Dialog.tsx",[],"C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\component\\Profile\\NewPost\\NewPostContainer.tsx",["161"],"import React from \"react\";\r\n\r\nimport {AddPostAC, ChageTextForPostAC} from \"../../../redux/ProfilePageReducer\";\r\nimport NewPost from \"./NewPost\";\r\nimport {connect} from \"react-redux\";\r\nimport {ActionType} from \"../../../redux/stateType\";\r\n\r\nlet mapStateToProps = (state: any) => {\r\n    return {\r\n        newPostText: state.profilePageReduser.newPostText\r\n    }\r\n\r\n}\r\nlet mapDispatchToProps = (dispatch: (action: ActionType) => void) => {\r\n    return{\r\n        changeTextForPost:(text: string)=>dispatch(ChageTextForPostAC(text)),\r\n        addPost:(text:string)=>dispatch( AddPostAC(text))\r\n    }\r\n\r\n}\r\nexport const NewPostContainer1 = connect(mapStateToProps,mapDispatchToProps)(NewPost)","C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\component\\Dialogs\\DialogsContainer.tsx",["162","163","164"],"C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\component\\Users\\UsersClearComponent.tsx",["165","166","167"],"C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\api\\axios-get.ts",[],"C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\component\\Profile\\ProfileContainer.tsx",["168"],"import React from \"react\";\r\nimport { compose } from \"redux\"\r\nimport {newPostDataType} from \"../../redux/stateType\";\r\nimport {RootState} from \"../../redux/redux-store\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    changeStatusProfileThunk,\r\n    getProfileThunk,\r\n    getStatusProfileThunk,\r\n    setUsersProfile\r\n} from \"../../redux/ProfilePageReducer\";\r\nimport {withRouter} from \"react-router-dom\"\r\nimport {RouteComponentProps} from 'react-router';\r\nimport {WithAuthRedirect} from \"../../Hoc/withAuthRedirect\";\r\n\r\ntype ParamsType = {\r\n    userID: string\r\n}\r\ntype OwnPropsType = MapStateToPropsType & MapDispatchToProps\r\ntype PropsType = OwnPropsType & RouteComponentProps<ParamsType>\r\ntype MapStateToPropsType = {\r\n    status:string\r\n    profile: any\r\n    newPostData: Array<newPostDataType>\r\n\r\n}\r\ntype ContactsType = {\r\n    github: string\r\n    vk: string\r\n    facebook: string\r\n    instagram: string\r\n    twitter: string\r\n    website: string\r\n    youtube: string\r\n    mainLink: string\r\n\r\n}\r\ntype PhotoType = {\r\n    small: string | null\r\n    large: string | null\r\n}\r\ntype ProfileType = {\r\n    userId: number\r\n    lookingForAJob: boolean\r\n    lookingForAJobDescription: string\r\n    fullName: string\r\n    contacts: ContactsType\r\n    photos: PhotoType\r\n\r\n}\r\ntype MapDispatchToProps = {\r\n    getProfileThunk: (userID: any) => void\r\n    getStatusProfileThunk:(userID: string)=>void\r\n    changeStatusProfileThunk:(status:string)=>void\r\n}\r\n\r\nexport class ProfileContainer extends React.Component<PropsType> {\r\n    componentDidMount(): void {\r\n        let userID = this.props.match.params.userID\r\n        this.props.getProfileThunk(userID)\r\n        this.props.getStatusProfileThunk(userID)\r\n    }\r\n\r\n    render(): React.ReactNode {\r\n        return (<Profile {...this.props} profile={this.props.profile}\r\n                          status={this.props.status} updateStatus={this.props.changeStatusProfileThunk}    />)\r\n\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: RootState): MapStateToPropsType => {\r\n    return {\r\n        profile: state.profilePageReduser.profile,\r\n        newPostData: state.profilePageReduser.newPostData,\r\n        status:state.profilePageReduser.status\r\n    }\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n    WithAuthRedirect,\r\n    connect(mapStateToProps,\r\n    {setUsersProfile, getProfileThunk,\r\n        getStatusProfileThunk,changeStatusProfileThunk}),\r\n    withRouter)\r\n(ProfileContainer)\r\n","C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\redux\\UsersReducer.tsx",["169","170","171"],"C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\redux\\AuthReducer.tsx",["172"],"C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\index.tsx",[],"C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\redux\\ProfilePageReducer.tsx",["173"],"C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\component\\Login\\Login.tsx",[],"C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\Hoc\\withAuthRedirect.tsx",[],"C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\component\\Profile\\Status\\Statuse.tsx",["174"],"import React, {useState} from \"react\"\r\n\r\ntype PropsType = {\r\n    status:any\r\n    updateStatus:(status:string)=>void\r\n}\r\nexport class Status extends React.Component<PropsType>{\r\nstate={\r\n    editMode: false,\r\n    status: this.props.status\r\n\r\n}\r\n    activateEditMode = () => {\r\n        this.setState( {\r\n            editMode: true\r\n        } );\r\n    }\r\n    deactivateEditMode() {\r\n        this.setState( {\r\n            editMode: false\r\n        } );\r\n        // @ts-ignore\r\n        this.props.updateStatus(this.state.status);\r\n    }\r\ncomponentDidUpdate(prevProps: Readonly<PropsType>, prevState:any): void {\r\n    if(prevProps.status!==this.props.status){\r\nthis.setState({\r\n    status:this.props.status\r\n})\r\n    }\r\n\r\n}\r\n\r\n    onStatusChange = (e:any) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        });\r\n    }\r\n\r\n\r\n  render() {\r\n      return (\r\n          <div>\r\n              {!this.state.editMode &&\r\n              <div>\r\n                  <span onDoubleClick={ this.activateEditMode }>{this.props.status || \"-------\"}</span>\r\n              </div>\r\n              }\r\n              {this.state.editMode &&\r\n              <div>\r\n                  <input onChange={this.onStatusChange} autoFocus={true}\r\n                         onBlur={ this.deactivateEditMode.bind(this) } value={this.state.status}/>\r\n              </div>\r\n              }\r\n          </div>\r\n      )\r\n  }\r\n\r\n\r\n}","C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\component\\Profile\\Ava\\Ava.tsx",["175","176"],"C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\component\\Dialogs\\Dialogs.tsx",["177","178","179"],"C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\component\\Profile\\Status\\statusWithHook.tsx",[],"C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\component\\Login\\formForLogin.tsx",[],"C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\component\\Profile\\NewPost\\FormForNewPost.tsx",[],"C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\component\\Dialogs\\ItemsForDialog\\FormForNewMessage.tsx",["180"],"C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\utilites\\helper.tsx",["181"],"C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\common\\TexareaForForm.tsx",[],"C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\redux\\AppReducer.tsx",["182"],{"ruleId":"183","severity":1,"message":"184","line":1,"column":9,"nodeType":"185","messageId":"186","endLine":1,"endColumn":14},{"ruleId":"187","replacedBy":"188"},{"ruleId":"189","replacedBy":"190"},{"ruleId":"191","severity":1,"message":"192","line":47,"column":42,"nodeType":"193","endLine":47,"endColumn":64},{"ruleId":"183","severity":1,"message":"194","line":9,"column":9,"nodeType":"185","messageId":"186","endLine":9,"endColumn":23},{"ruleId":"191","severity":1,"message":"192","line":23,"column":13,"nodeType":"193","endLine":24,"endColumn":112},{"ruleId":"187","replacedBy":"195"},{"ruleId":"189","replacedBy":"196"},{"ruleId":"183","severity":1,"message":"197","line":10,"column":9,"nodeType":"185","messageId":"186","endLine":10,"endColumn":14},{"ruleId":"198","severity":1,"message":"199","line":20,"column":7,"nodeType":"200","endLine":20,"endColumn":20,"suggestions":"201"},{"ruleId":"183","severity":1,"message":"202","line":3,"column":8,"nodeType":"185","messageId":"186","endLine":3,"endColumn":13},{"ruleId":"183","severity":1,"message":"203","line":5,"column":9,"nodeType":"185","messageId":"186","endLine":5,"endColumn":29},{"ruleId":"183","severity":1,"message":"204","line":5,"column":55,"nodeType":"185","messageId":"186","endLine":5,"endColumn":62},{"ruleId":"183","severity":1,"message":"205","line":6,"column":20,"nodeType":"185","messageId":"186","endLine":6,"endColumn":29},{"ruleId":"183","severity":1,"message":"206","line":7,"column":9,"nodeType":"185","messageId":"186","endLine":7,"endColumn":12},{"ruleId":"183","severity":1,"message":"207","line":9,"column":6,"nodeType":"185","messageId":"186","endLine":9,"endColumn":15},{"ruleId":"191","severity":1,"message":"192","line":8,"column":13,"nodeType":"193","endLine":9,"endColumn":113},{"ruleId":"183","severity":1,"message":"184","line":1,"column":8,"nodeType":"185","messageId":"186","endLine":1,"endColumn":13},{"ruleId":"183","severity":1,"message":"184","line":1,"column":8,"nodeType":"185","messageId":"186","endLine":1,"endColumn":13},{"ruleId":"183","severity":1,"message":"208","line":1,"column":16,"nodeType":"185","messageId":"186","endLine":1,"endColumn":27},{"ruleId":"183","severity":1,"message":"209","line":15,"column":6,"nodeType":"185","messageId":"186","endLine":15,"endColumn":28},{"ruleId":"191","severity":1,"message":"192","line":46,"column":25,"nodeType":"193","endLine":46,"endColumn":105},{"ruleId":"210","severity":1,"message":"211","line":52,"column":58,"nodeType":"212","messageId":"213","endLine":52,"endColumn":60},{"ruleId":"210","severity":1,"message":"211","line":56,"column":58,"nodeType":"212","messageId":"213","endLine":56,"endColumn":60},{"ruleId":"183","severity":1,"message":"214","line":43,"column":6,"nodeType":"185","messageId":"186","endLine":43,"endColumn":17},{"ruleId":"183","severity":1,"message":"184","line":1,"column":8,"nodeType":"185","messageId":"186","endLine":1,"endColumn":13},{"ruleId":"210","severity":1,"message":"211","line":98,"column":37,"nodeType":"212","messageId":"213","endLine":98,"endColumn":39},{"ruleId":"210","severity":1,"message":"211","line":110,"column":37,"nodeType":"212","messageId":"213","endLine":110,"endColumn":39},{"ruleId":"183","severity":1,"message":"184","line":1,"column":8,"nodeType":"185","messageId":"186","endLine":1,"endColumn":13},{"ruleId":"183","severity":1,"message":"184","line":1,"column":8,"nodeType":"185","messageId":"186","endLine":1,"endColumn":13},{"ruleId":"183","severity":1,"message":"215","line":1,"column":16,"nodeType":"185","messageId":"186","endLine":1,"endColumn":24},{"ruleId":"191","severity":1,"message":"192","line":8,"column":15,"nodeType":"193","endLine":8,"endColumn":37},{"ruleId":"191","severity":1,"message":"192","line":12,"column":5,"nodeType":"193","endLine":12,"endColumn":76},{"ruleId":"183","severity":1,"message":"208","line":1,"column":16,"nodeType":"185","messageId":"186","endLine":1,"endColumn":27},{"ruleId":"183","severity":1,"message":"216","line":6,"column":9,"nodeType":"185","messageId":"186","endLine":6,"endColumn":38},{"ruleId":"183","severity":1,"message":"217","line":7,"column":9,"nodeType":"185","messageId":"186","endLine":7,"endColumn":26},{"ruleId":"183","severity":1,"message":"218","line":4,"column":9,"nodeType":"185","messageId":"186","endLine":4,"endColumn":31},{"ruleId":"183","severity":1,"message":"184","line":1,"column":8,"nodeType":"185","messageId":"186","endLine":1,"endColumn":13},{"ruleId":"183","severity":1,"message":"184","line":1,"column":8,"nodeType":"185","messageId":"186","endLine":1,"endColumn":13},"@typescript-eslint/no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","no-native-reassign",["219"],"no-negated-in-lhs",["220"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'StatusWithHook' is defined but never used.",["219"],["220"],"'Login' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["221"],"'axios' is defined but never used.","'AuthReduserStateType' is defined but never used.","'SetAuth' is defined but never used.","'StoreType' is defined but never used.","'API' is defined but never used.","'PropsType' is defined but never used.","'ChangeEvent' is defined but never used.","'mapDispatchToPropsType' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'ProfileType' is defined but never used.","'useState' is defined but never used.","'FormDataTypeFormForNewMessage' is defined but never used.","'InjectedFormProps' is defined but never used.","'FormDataTypeForNewPost' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"222","fix":"223"},"Update the dependencies array to be: [dispatch, initialized]",{"range":"224","text":"225"},[920,933],"[dispatch, initialized]"]