[{"C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\redux\\redux-store.tsx":"1","C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\redux\\DialogsPageReducer.tsx":"2","C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\component\\Nav\\Nav.tsx":"3","C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\component\\Users\\UsersContainer.tsx":"4","C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\component\\Profile\\Profile.tsx":"5","C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\component\\Dialogs\\ItemsForDialog\\ItemsForDialog.tsx":"6","C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\component\\Profile\\MyPost\\MyPost.tsx":"7","C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\component\\Profile\\NewPost\\NewPost.tsx":"8","C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\App.tsx":"9","C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\component\\Friends\\Friends.tsx":"10","C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\component\\Header\\HeaderContainer.tsx":"11","C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\component\\Header\\Header.tsx":"12","C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\component\\Dialogs\\Dialog\\Dialog.tsx":"13","C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\component\\Profile\\NewPost\\NewPostContainer.tsx":"14","C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\component\\Dialogs\\DialogsContainer.tsx":"15","C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\component\\Users\\UsersClearComponent.tsx":"16","C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\api\\axios-get.ts":"17","C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\component\\Profile\\ProfileContainer.tsx":"18","C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\redux\\UsersReducer.tsx":"19","C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\redux\\AuthReducer.tsx":"20","C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\index.tsx":"21","C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\redux\\ProfilePageReducer.tsx":"22","C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\component\\Login\\Login.tsx":"23","C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\Hoc\\withAuthRedirect.tsx":"24","C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\component\\Profile\\Status\\Statuse.tsx":"25","C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\component\\Profile\\Ava\\Ava.tsx":"26","C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\component\\Dialogs\\Dialogs.tsx":"27","C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\component\\Profile\\Status\\statusWithHook.tsx":"28","C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\component\\Login\\formForLogin.tsx":"29","C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\component\\Profile\\NewPost\\FormForNewPost.tsx":"30","C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\component\\Dialogs\\ItemsForDialog\\FormForNewMessage.tsx":"31","C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\utilites\\helper.tsx":"32","C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\common\\TexareaForForm.tsx":"33"},{"size":729,"mtime":1615380926382,"results":"34","hashOfConfig":"35"},{"size":1119,"mtime":1615559367536,"results":"36","hashOfConfig":"35"},{"size":759,"mtime":1614947890968,"results":"37","hashOfConfig":"35"},{"size":3159,"mtime":1615266304323,"results":"38","hashOfConfig":"35"},{"size":1373,"mtime":1615395531963,"results":"39","hashOfConfig":"35"},{"size":231,"mtime":1614568680463,"results":"40","hashOfConfig":"35"},{"size":124,"mtime":1614568680479,"results":"41","hashOfConfig":"35"},{"size":485,"mtime":1615564692247,"results":"42","hashOfConfig":"35"},{"size":1277,"mtime":1615266627637,"results":"43","hashOfConfig":"35"},{"size":144,"mtime":1614568680463,"results":"44","hashOfConfig":"35"},{"size":1379,"mtime":1614938970900,"results":"45","hashOfConfig":"35"},{"size":617,"mtime":1614568680463,"results":"46","hashOfConfig":"35"},{"size":319,"mtime":1614568680447,"results":"47","hashOfConfig":"35"},{"size":686,"mtime":1614568680479,"results":"48","hashOfConfig":"35"},{"size":793,"mtime":1615559456288,"results":"49","hashOfConfig":"35"},{"size":3815,"mtime":1614936751418,"results":"50","hashOfConfig":"35"},{"size":1437,"mtime":1615309546215,"results":"51","hashOfConfig":"35"},{"size":2456,"mtime":1615309864507,"results":"52","hashOfConfig":"35"},{"size":4320,"mtime":1615298505019,"results":"53","hashOfConfig":"35"},{"size":1382,"mtime":1614939198296,"results":"54","hashOfConfig":"35"},{"size":402,"mtime":1614568680494,"results":"55","hashOfConfig":"35"},{"size":3116,"mtime":1615527960008,"results":"56","hashOfConfig":"35"},{"size":328,"mtime":1615385295003,"results":"57","hashOfConfig":"35"},{"size":708,"mtime":1615054102067,"results":"58","hashOfConfig":"35"},{"size":1407,"mtime":1615349085984,"results":"59","hashOfConfig":"35"},{"size":389,"mtime":1614568680479,"results":"60","hashOfConfig":"35"},{"size":1339,"mtime":1615564160246,"results":"61","hashOfConfig":"35"},{"size":904,"mtime":1615395348973,"results":"62","hashOfConfig":"35"},{"size":1244,"mtime":1615805027907,"results":"63","hashOfConfig":"35"},{"size":1037,"mtime":1615804159933,"results":"64","hashOfConfig":"35"},{"size":1155,"mtime":1615803498716,"results":"65","hashOfConfig":"35"},{"size":596,"mtime":1615796247206,"results":"66","hashOfConfig":"35"},{"size":1327,"mtime":1615804513420,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1gf3old",{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"74"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"74"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"74"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"74"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"74"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"74"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"74"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\redux\\redux-store.tsx",[],"C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\redux\\DialogsPageReducer.tsx",["144"],"C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\component\\Nav\\Nav.tsx",[],["145","146"],"C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\component\\Users\\UsersContainer.tsx",["147"],"import React from \"react\";\r\nimport { compose } from \"redux\"\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    follow, FollowThunk,\r\n    getUsers,\r\n    setCurrentPage,\r\n    toogleFollowingInProgress,\r\n    unFollow, unFollowThunk,\r\n    UsersType\r\n} from \"../../redux/UsersReducer\";\r\nimport {UsersClearComponent} from \"./UsersClearComponent\";\r\nimport preloader from \"../../accets/preloader.gif\"\r\nimport {RootState} from \"../../redux/redux-store\";\r\nimport {WithAuthRedirect} from \"../../Hoc/withAuthRedirect\";\r\n\r\ntype PropsType = {\r\n    isFetching: boolean\r\n    users: Array<UsersType>\r\n    setCurrentPage: (currentPage: number) => void\r\n    follow: (id: number) => void\r\n    unFollow: (id: number) => void\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    toogleFollowingInProgress: (isFollowingInProgress: any, userId: any) => void\r\n    followingInProgress: any\r\n    getUsers: (currentPage: number, pageSize: number) => void\r\n    unFollowThunk: (Users: any, UserID: any) => void\r\n    FollowThunk: (Users: any, UserID: any) => void\r\n\r\n}\r\n\r\nclass UsersAPIComponent extends React.Component<PropsType> {\r\n\r\n    componentDidMount(): void {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize)\r\n    }\r\n\r\n    onClickHandler = (pageNumber: number) => {\r\n        this.props.getUsers(pageNumber, this.props.pageSize)\r\n    }\r\n\r\n    render(): React.ReactNode {\r\n        return (\r\n            <>\r\n                {this.props.isFetching ? <img src={preloader}/> : null}\r\n                <UsersClearComponent\r\n                    pageSize={this.props.pageSize}\r\n                    totalUsersCount={this.props.totalUsersCount}\r\n                    currentPage={this.props.currentPage}\r\n                    onClickHandler={this.onClickHandler}\r\n                    users={this.props.users}\r\n                    follow={this.props.follow}\r\n                    Unfollow={this.props.unFollow}\r\n                    toogleFollowingInProgress={this.props.toogleFollowingInProgress}\r\n                    followingInProgress={this.props.followingInProgress}\r\n                    unFollowThunk={this.props.unFollowThunk}\r\n                    FollowThunk={this.props.FollowThunk}\r\n                />\r\n\r\n\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: RootState) => {\r\n    return {\r\n        users: state.usersReduser.users,\r\n        pageSize: state.usersReduser.pageSize,\r\n        totalUsersCount: state.usersReduser.totalUsersCount,\r\n        currentPage: state.usersReduser.currentPage,\r\n        isFetching: state.usersReduser.isFetching,\r\n        followingInProgress: state.usersReduser.followingInProgress,\r\n    }\r\n}\r\n\r\nexport default compose<React.ComponentType>(WithAuthRedirect,connect(mapStateToProps, {\r\n    follow,\r\n    unFollow,\r\n    setCurrentPage,\r\n    toogleFollowingInProgress,\r\n    getUsers,\r\n    unFollowThunk,\r\n    FollowThunk\r\n}))(UsersAPIComponent)\r\n/*\r\nexport const UsersContainer = WithAuthRedirect(  connect(mapStateToProps, {\r\n    follow,\r\n    unFollow,\r\n    setCurrentPage,\r\n    toogleFollowingInProgress,\r\n    getUsers,\r\n    unFollowThunk,\r\n    FollowThunk\r\n})(UsersAPIComponent))*/\r\n","C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\component\\Profile\\Profile.tsx",["148","149"],"C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\component\\Dialogs\\ItemsForDialog\\ItemsForDialog.tsx",[],"C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\component\\Profile\\MyPost\\MyPost.tsx",[],"C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\component\\Profile\\NewPost\\NewPost.tsx",[],"C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\App.tsx",[],["150","151"],"C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\component\\Friends\\Friends.tsx",[],"C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\component\\Header\\HeaderContainer.tsx",["152","153","154","155","156","157"],"import React from 'react';\r\nimport Header from \"./Header\";\r\nimport axios from \"axios\";\r\nimport {connect} from \"react-redux\";\r\nimport {AuthReduserStateType, authThunk, SetAuth} from \"../../redux/AuthReducer\";\r\nimport {RootState, StoreType} from \"../../redux/redux-store\";\r\nimport {API} from \"../../api/axios-get\";\r\n\r\ntype PropsType=MSTPType&MDTPType\r\n\r\nexport class HeaderContainer extends React.Component<any> {\r\n    componentDidMount(): void {\r\n        this.props.authThunk()\r\n     /*  API.auth()\r\n            .then(data => {\r\n                if(data.resultCode===0){\r\n                    let id=data.data.id\r\n                    let login=data.data.login\r\n                    let email=data.data.email\r\n                    let dataForSetAuth={id,login,email}\r\n                    this.props.SetAuth(dataForSetAuth as AuthReduserStateType)\r\n                }\r\n\r\n            } )*/\r\n    }\r\n\r\n    render(): React.ReactNode {\r\n        return(<Header isAuth={this.props.isAuth} email={this.props.email}  />)\r\n    }\r\n}\r\ntype MSTPType={\r\n    isAuth:boolean\r\n    email:string\r\n}\r\nlet MapStateToProps=(state:RootState):MSTPType=>{\r\n    return{\r\n        isAuth: state.AuthReduser.isAuth,\r\n        email: state.AuthReduser.email\r\n\r\n    } as MSTPType\r\n}\r\ntype MDTPType={\r\n    authThunk:()=>void\r\n}\r\nexport const MainHaderContainer = connect(MapStateToProps,{authThunk})(HeaderContainer)\r\n\r\n","C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\component\\Header\\Header.tsx",["158"],"import React from 'react';\r\nimport s from \"./Header.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nfunction Header(props:any) {\r\n    return(\r\n        <header className={s.header}>\r\n            <img className={s.logotip}\r\n                 src=\"https://avatars.mds.yandex.net/get-pdb/933338/94068ff5-61aa-43bd-909a-a47aade07a8b/orig\"/>\r\n                 <div className={s.login}>\r\n                     {props.isAuth\r\n                         ?props.email\r\n                         :<NavLink to={\"/login\"}> LOGIN</NavLink>}\r\n\r\n\r\n                 </div>\r\n        </header>\r\n\r\n    )\r\n\r\n}\r\nexport default Header;","C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\component\\Dialogs\\Dialog\\Dialog.tsx",[],["159","160"],"C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\component\\Profile\\NewPost\\NewPostContainer.tsx",["161"],"import React from \"react\";\r\n\r\nimport {AddPostAC, ChageTextForPostAC} from \"../../../redux/ProfilePageReducer\";\r\nimport NewPost from \"./NewPost\";\r\nimport {connect} from \"react-redux\";\r\nimport {ActionType} from \"../../../redux/stateType\";\r\n\r\nlet mapStateToProps = (state: any) => {\r\n    return {\r\n        newPostText: state.profilePageReduser.newPostText\r\n    }\r\n\r\n}\r\nlet mapDispatchToProps = (dispatch: (action: ActionType) => void) => {\r\n    return{\r\n        changeTextForPost:(text: string)=>dispatch(ChageTextForPostAC(text)),\r\n        addPost:(text:string)=>dispatch( AddPostAC(text))\r\n    }\r\n\r\n}\r\nexport const NewPostContainer1 = connect(mapStateToProps,mapDispatchToProps)(NewPost)","C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\component\\Dialogs\\DialogsContainer.tsx",["162","163","164"],"C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\component\\Users\\UsersClearComponent.tsx",["165","166","167","168"],"import React from \"react\";\r\nimport s from \"./users.module.css\";\r\nimport userPhoto from \"../../accets/userPhoto.jpg\";\r\nimport {UsersType} from \"../../redux/UsersReducer\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {API} from \"../../api/axios-get\";\r\n\r\ntype PropsType = {\r\n    onClickHandler: (pageNumber: number) => void\r\n    users: Array<UsersType>\r\n    follow: (id: number) => void\r\n    Unfollow: (id: number) => void\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    toogleFollowingInProgress: (isFollowingInProgress: boolean, userID:number) => void\r\n    followingInProgress: any\r\n    unFollowThunk:(Users:any, UserID:any)=>void\r\n    FollowThunk:(Users:any, UserID:any)=>void\r\n\r\n}\r\n\r\n\r\nexport const UsersClearComponent = (props: PropsType) => {\r\n    let countOfPages = Math.ceil(props.totalUsersCount / props.pageSize)\r\n    let pages = [];\r\n    for (let i = 1; i <= countOfPages; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    return (\r\n\r\n        <div>\r\n            {pages.map(p => {\r\n                return <span className={props.currentPage === p ? s.selectedPage : \"\"}\r\n                             onClick={() => {\r\n                                 props.onClickHandler(p)\r\n                             }}>{p}</span>\r\n            })}\r\n\r\n\r\n            {\r\n                props.users.map(u => <div key={u.id}>\r\n                <span>\r\n                    <div>\r\n                        <NavLink to={\"/profile/\" + u.id}>\r\n                        <img src={u.photos.small ? u.photos.small : userPhoto} className={s.fotostyle}/>\r\n                        </NavLink>\r\n                    </div>\r\n                    <div>{\r\n                        u.followed\r\n                            ? <button disabled={props.followingInProgress\r\n                                .some((id: number) => id == u.id)}\r\n                                      onClick={() => {props.unFollowThunk(u,u.id)\r\n                                          /*props.toogleFollowingInProgress(true,u.id)\r\n                                          API.unfollow(u)\r\n                                              .then(data => {\r\n                                                  if (data.resultCode == 0) {\r\n                                                      props.Unfollow(u.id)\r\n                                                  }\r\n                                                  props.toogleFollowingInProgress(false,u.id)\r\n                                              })*/\r\n                                      }}>UNFOLLOW</button>\r\n                            : <button  disabled={props.followingInProgress\r\n                                .some((id: number) => id == u.id)} onClick={() => {\r\n                                    props.FollowThunk(u,u.id)\r\n                                /*props.toogleFollowingInProgress(true,u.id)\r\n                                API.follow(u)\r\n                                    .then(data => {\r\n                                        if (data.resultCode == 0) {\r\n                                            props.follow(u.id)\r\n                                        }\r\n                                        props.toogleFollowingInProgress(false,u.id)\r\n                                    })*/\r\n                            }}>FOLLOW</button>\r\n                    }\r\n\r\n                    </div>\r\n                </span>\r\n                    <span>\r\n                    <span>\r\n                        <div>{u.name}</div>\r\n                        <div>{u.status} </div>\r\n                    </span>\r\n                    <span>\r\n                        <div>{\"u.location.city\"}</div>\r\n                        <div>{\"u.location.country\"}</div>\r\n                    </span>\r\n                </span>\r\n                </div>)\r\n            }\r\n        </div>\r\n    )\r\n}","C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\api\\axios-get.ts",[],"C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\component\\Profile\\ProfileContainer.tsx",["169"],"import React from \"react\";\r\nimport { compose } from \"redux\"\r\nimport {newPostDataType} from \"../../redux/stateType\";\r\nimport {RootState} from \"../../redux/redux-store\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    changeStatusProfileThunk,\r\n    getProfileThunk,\r\n    getStatusProfileThunk,\r\n    setUsersProfile\r\n} from \"../../redux/ProfilePageReducer\";\r\nimport {withRouter} from \"react-router-dom\"\r\nimport {RouteComponentProps} from 'react-router';\r\nimport {WithAuthRedirect} from \"../../Hoc/withAuthRedirect\";\r\n\r\ntype ParamsType = {\r\n    userID: string\r\n}\r\ntype OwnPropsType = MapStateToPropsType & MapDispatchToProps\r\ntype PropsType = OwnPropsType & RouteComponentProps<ParamsType>\r\ntype MapStateToPropsType = {\r\n    status:string\r\n    profile: any\r\n    newPostData: Array<newPostDataType>\r\n\r\n}\r\ntype ContactsType = {\r\n    github: string\r\n    vk: string\r\n    facebook: string\r\n    instagram: string\r\n    twitter: string\r\n    website: string\r\n    youtube: string\r\n    mainLink: string\r\n\r\n}\r\ntype PhotoType = {\r\n    small: string | null\r\n    large: string | null\r\n}\r\ntype ProfileType = {\r\n    userId: number\r\n    lookingForAJob: boolean\r\n    lookingForAJobDescription: string\r\n    fullName: string\r\n    contacts: ContactsType\r\n    photos: PhotoType\r\n\r\n}\r\ntype MapDispatchToProps = {\r\n    getProfileThunk: (userID: any) => void\r\n    getStatusProfileThunk:(userID: string)=>void\r\n    changeStatusProfileThunk:(status:string)=>void\r\n}\r\n\r\nexport class ProfileContainer extends React.Component<PropsType> {\r\n    componentDidMount(): void {\r\n        let userID = this.props.match.params.userID\r\n        this.props.getProfileThunk(userID)\r\n        this.props.getStatusProfileThunk(userID)\r\n    }\r\n\r\n    render(): React.ReactNode {\r\n        return (<Profile {...this.props} profile={this.props.profile}\r\n                          status={this.props.status} updateStatus={this.props.changeStatusProfileThunk}    />)\r\n\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: RootState): MapStateToPropsType => {\r\n    return {\r\n        profile: state.profilePageReduser.profile,\r\n        newPostData: state.profilePageReduser.newPostData,\r\n        status:state.profilePageReduser.status\r\n    }\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n    WithAuthRedirect,\r\n    connect(mapStateToProps,\r\n    {setUsersProfile, getProfileThunk,\r\n        getStatusProfileThunk,changeStatusProfileThunk}),\r\n    withRouter)\r\n(ProfileContainer)\r\n","C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\redux\\UsersReducer.tsx",["170","171","172"],"C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\redux\\AuthReducer.tsx",["173"],"import React from \"react\";\r\nimport {ActionType} from \"./stateType\";\r\nimport {API} from \"../api/axios-get\";\r\n\r\nexport type SetAuthActionType = ReturnType<typeof SetAuth>;\r\n\r\n\r\nexport type AuthReduserStateType = {\r\n    id: number | null\r\n    email: string | null\r\n    login: string | null\r\n    isAuth:boolean\r\n\r\n}\r\nexport const SetAuth = (data: AuthReduserStateType) => {\r\n    return {\r\n        type: \"SET-AUTH\",\r\n        id: data.id,\r\n        email: data.email,\r\n        login: data.login\r\n    } as const\r\n}\r\nlet initialState: AuthReduserStateType = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth:false\r\n}\r\n\r\nexport const AuthReduser = (state = initialState, action: ActionType) => {\r\n\r\n    if (action.type === \"SET-AUTH\") {\r\n        return {...state,\r\n            id: action.id,\r\n            email: action.email,\r\n            login: action.login,\r\n            isAuth:true}\r\n    }\r\n    return state;\r\n}\r\n export const authThunk=()=>{\r\n    return (dispatch:(action:ActionType)=>void)=>{\r\n     API.auth()\r\n         .then(data => {\r\n             if(data.resultCode===0){\r\n                 let id=data.data.id\r\n                 let login=data.data.login\r\n                 let email=data.data.email\r\n                 let dataForSetAuth={id,login,email}\r\n                 dispatch(SetAuth(dataForSetAuth as AuthReduserStateType))\r\n             }\r\n\r\n         } )\r\n }\r\n }\r\n","C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\index.tsx",[],"C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\redux\\ProfilePageReducer.tsx",["174"],"C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\component\\Login\\Login.tsx",[],"C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\Hoc\\withAuthRedirect.tsx",[],"C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\component\\Profile\\Status\\Statuse.tsx",["175"],"C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\component\\Profile\\Ava\\Ava.tsx",["176","177"],"C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\component\\Dialogs\\Dialogs.tsx",["178","179","180"],"C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\component\\Profile\\Status\\statusWithHook.tsx",[],"C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\component\\Login\\formForLogin.tsx",[],"C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\component\\Profile\\NewPost\\FormForNewPost.tsx",[],"C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\component\\Dialogs\\ItemsForDialog\\FormForNewMessage.tsx",["181"],"C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\utilites\\helper.tsx",["182"],"C:\\Slava\\it\\projects\\social-Network\\my-app\\src\\common\\TexareaForForm.tsx",[],{"ruleId":"183","severity":1,"message":"184","line":1,"column":9,"nodeType":"185","messageId":"186","endLine":1,"endColumn":14},{"ruleId":"187","replacedBy":"188"},{"ruleId":"189","replacedBy":"190"},{"ruleId":"191","severity":1,"message":"192","line":47,"column":42,"nodeType":"193","endLine":47,"endColumn":64},{"ruleId":"183","severity":1,"message":"194","line":9,"column":9,"nodeType":"185","messageId":"186","endLine":9,"endColumn":23},{"ruleId":"191","severity":1,"message":"192","line":23,"column":13,"nodeType":"193","endLine":24,"endColumn":112},{"ruleId":"187","replacedBy":"195"},{"ruleId":"189","replacedBy":"196"},{"ruleId":"183","severity":1,"message":"197","line":3,"column":8,"nodeType":"185","messageId":"186","endLine":3,"endColumn":13},{"ruleId":"183","severity":1,"message":"198","line":5,"column":9,"nodeType":"185","messageId":"186","endLine":5,"endColumn":29},{"ruleId":"183","severity":1,"message":"199","line":5,"column":42,"nodeType":"185","messageId":"186","endLine":5,"endColumn":49},{"ruleId":"183","severity":1,"message":"200","line":6,"column":20,"nodeType":"185","messageId":"186","endLine":6,"endColumn":29},{"ruleId":"183","severity":1,"message":"201","line":7,"column":9,"nodeType":"185","messageId":"186","endLine":7,"endColumn":12},{"ruleId":"183","severity":1,"message":"202","line":9,"column":6,"nodeType":"185","messageId":"186","endLine":9,"endColumn":15},{"ruleId":"191","severity":1,"message":"192","line":8,"column":13,"nodeType":"193","endLine":9,"endColumn":113},{"ruleId":"187","replacedBy":"203"},{"ruleId":"189","replacedBy":"204"},{"ruleId":"183","severity":1,"message":"184","line":1,"column":8,"nodeType":"185","messageId":"186","endLine":1,"endColumn":13},{"ruleId":"183","severity":1,"message":"184","line":1,"column":8,"nodeType":"185","messageId":"186","endLine":1,"endColumn":13},{"ruleId":"183","severity":1,"message":"205","line":1,"column":16,"nodeType":"185","messageId":"186","endLine":1,"endColumn":27},{"ruleId":"183","severity":1,"message":"206","line":15,"column":6,"nodeType":"185","messageId":"186","endLine":15,"endColumn":28},{"ruleId":"183","severity":1,"message":"201","line":6,"column":9,"nodeType":"185","messageId":"186","endLine":6,"endColumn":12},{"ruleId":"191","severity":1,"message":"192","line":47,"column":25,"nodeType":"193","endLine":47,"endColumn":105},{"ruleId":"207","severity":1,"message":"208","line":53,"column":58,"nodeType":"209","messageId":"210","endLine":53,"endColumn":60},{"ruleId":"207","severity":1,"message":"208","line":65,"column":58,"nodeType":"209","messageId":"210","endLine":65,"endColumn":60},{"ruleId":"183","severity":1,"message":"211","line":43,"column":6,"nodeType":"185","messageId":"186","endLine":43,"endColumn":17},{"ruleId":"183","severity":1,"message":"184","line":1,"column":8,"nodeType":"185","messageId":"186","endLine":1,"endColumn":13},{"ruleId":"207","severity":1,"message":"208","line":98,"column":37,"nodeType":"209","messageId":"210","endLine":98,"endColumn":39},{"ruleId":"207","severity":1,"message":"208","line":110,"column":37,"nodeType":"209","messageId":"210","endLine":110,"endColumn":39},{"ruleId":"183","severity":1,"message":"184","line":1,"column":8,"nodeType":"185","messageId":"186","endLine":1,"endColumn":13},{"ruleId":"183","severity":1,"message":"184","line":1,"column":8,"nodeType":"185","messageId":"186","endLine":1,"endColumn":13},{"ruleId":"183","severity":1,"message":"212","line":1,"column":16,"nodeType":"185","messageId":"186","endLine":1,"endColumn":24},{"ruleId":"191","severity":1,"message":"192","line":8,"column":15,"nodeType":"193","endLine":8,"endColumn":37},{"ruleId":"191","severity":1,"message":"192","line":12,"column":5,"nodeType":"193","endLine":12,"endColumn":76},{"ruleId":"183","severity":1,"message":"205","line":1,"column":16,"nodeType":"185","messageId":"186","endLine":1,"endColumn":27},{"ruleId":"183","severity":1,"message":"213","line":6,"column":9,"nodeType":"185","messageId":"186","endLine":6,"endColumn":38},{"ruleId":"183","severity":1,"message":"214","line":7,"column":9,"nodeType":"185","messageId":"186","endLine":7,"endColumn":26},{"ruleId":"183","severity":1,"message":"215","line":4,"column":9,"nodeType":"185","messageId":"186","endLine":4,"endColumn":31},{"ruleId":"183","severity":1,"message":"184","line":1,"column":8,"nodeType":"185","messageId":"186","endLine":1,"endColumn":13},"@typescript-eslint/no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","no-native-reassign",["216"],"no-negated-in-lhs",["217"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'StatusWithHook' is defined but never used.",["216"],["217"],"'axios' is defined but never used.","'AuthReduserStateType' is defined but never used.","'SetAuth' is defined but never used.","'StoreType' is defined but never used.","'API' is defined but never used.","'PropsType' is defined but never used.",["216"],["217"],"'ChangeEvent' is defined but never used.","'mapDispatchToPropsType' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'ProfileType' is defined but never used.","'useState' is defined but never used.","'FormDataTypeFormForNewMessage' is defined but never used.","'InjectedFormProps' is defined but never used.","'FormDataTypeForNewPost' is defined but never used.","no-global-assign","no-unsafe-negation"]